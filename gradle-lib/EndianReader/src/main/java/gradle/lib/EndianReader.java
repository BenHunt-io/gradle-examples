/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package gradle.lib;

public class EndianReader {

    private ByteOrder byteOrder;
    private byte[] data;
    private int totalBytesRead = 0;
    
    public EndianReader(String data, ByteOrder byteOrder){
        this.byteOrder = byteOrder;
        this.data = data.getBytes();
    }

    public int read(byte[] b){
        if(byteOrder == ByteOrder.BIG_ENDIAN){
            return readBigEndian(b);
        }
        else if(byteOrder == ByteOrder.LITTLE_ENDIAN){
            return readLittleEndian(b);
        }

        return 0;
    }

    private int readLittleEndian(byte[] b){
        int bytesRead = 0;
        for(int i = b.length-1; i>=0 && totalBytesRead < data.length; i--){
            b[i] = this.data[this.data.length-1-(totalBytesRead+bytesRead)];
            bytesRead++;
        }
        totalBytesRead+=bytesRead;

        return bytesRead;
    }

    private int readBigEndian(byte[] b){
        int bytesRead = 0;
        for(int i = 0; i<b.length && i<data.length; i++){
            b[i] = this.data[totalBytesRead+bytesRead];
            bytesRead++;
        }
        totalBytesRead+=bytesRead;

        return bytesRead;
    }

    public enum ByteOrder {
        BIG_ENDIAN,
        LITTLE_ENDIAN
    }


    
}